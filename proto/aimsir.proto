syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.aimsir";
option java_outer_classname = "AimsirProto";

package aimsir;

// Peer update definition
enum PeerUpdateType {
  Add = 0;
  Remove = 1;
}

message Peer {
  string id = 1;
  string ipaddress = 2;
}

message PeerUpdate {
  PeerUpdateType update_type = 1;
  uint32 probe_interval = 2;
  uint32 aggregate_interval = 3;
  repeated Peer update = 4;
}

// Metric definition
enum MetricType {
  PL = 0;
  JitterStdDev = 1;
  JitterMin = 2;
  JitterMax = 3;
}

message Metric {
  MetricType metric_type = 1;
  string peer_id = 2;
  string local_id = 3;
  float value = 4;
}

message MetricMessage {
  repeated Metric metric = 1;
}

message MetricResponse {
  bool ok = 1;
}

message PeerResponse {
  bool ok = 1;
}

service AimsirService {
  rpc Metrics(stream MetricMessage) returns (MetricResponse) {}
  rpc Register(Peer) returns (stream PeerUpdate) {}
  rpc AddPeer(Peer) returns (PeerResponse) {}
  rpc RemovePeer(Peer) returns (PeerResponse) {}
}
